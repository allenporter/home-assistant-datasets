---
uuid: 94af7bdd-2a32-493d-b6be-de250c7b7b84
task_id: light_on_door_light_on_door-light_on_door-1
model_id: qwen3-4b
category: light
task:
  input_text: |
    # Light on door

    ## Problem statement

    Create an blueprint automation to turn on a light when the door opens.

    ## Example use cases

    These are example use cases that could be used with the blueprint:

    - Turn on the pantry light when the pantry door opens

    ## Detailed Description

    The blueprint should accept two inputs:

    | Input          | Description                                                                     |
    | -------------- | ------------------------------------------------------------------------------- |
    | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
    | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

    The automation should trigger when the door opens, and turn the light on. The
    light should be shut off when the door closes or after a 2 minute timeout.
response: |-
  ```yaml
  blueprint:
    name: Light on door
    description: Turn on a light when the door opens and turn it off when the door closes or after a 2 minute timeout.
    inputs:
      door_sensor:
        friendly_name: Door sensor
        type: binary_sensor
      light_switch:
        friendly_name: Light switch
        type: light
        multiple: true
    steps:
      - id: trigger
        title: Trigger automation when the door opens
        initial_state: true
        action:
          service: trigger_event
          data:
            event: door_open
      - id: turn_on_light
        title: Turn on the light
        action:
          service: light.turn_on
          data:
            entity_id: >
              {{ light_switch | join(', ') }}
      - id: wait_for_door_close
        title: Wait for the door to close
        action:
          service: trigger_event
          data:
            event: door_close
      - id: turn_off_light
        title: Turn off the light
        action:
          service: light.turn_off
          data:
            entity_id: >
              {{ light_switch | join(', ') }}
      - id: timeout
        title: Turn off the light after 2 minutes if the door hasn't closed
        action:
          delay: 120
          service: light.turn_off
          data:
            entity_id: >
              {{ light_switch | join(', ') }}
  ```
context:
  conversation_trace:
  - event_type: async_process
    data:
      text: |
        # Light on door

        ## Problem statement

        Create an blueprint automation to turn on a light when the door opens.

        ## Example use cases

        These are example use cases that could be used with the blueprint:

        - Turn on the pantry light when the pantry door opens

        ## Detailed Description

        The blueprint should accept two inputs:

        | Input          | Description                                                                     |
        | -------------- | ------------------------------------------------------------------------------- |
        | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
        | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

        The automation should trigger when the door opens, and turn the light on. The
        light should be shut off when the door closes or after a 2 minute timeout.
      context:
        id: 01JZEJ4YB16VVWYXWJ2SC5J2XM
        parent_id: null
        user_id: null
      conversation_id: null
      device_id: null
      language: en
      agent_id: conversation.mock_title
      extra_system_prompt: null
    timestamp: 2025-07-06 00:28:33.505961+00:00
  - event_type: agent_detail
    data:
      messages:
      - role: system
        content: |-
          Create a Home Assistant blueprint YAML configuration based on the user request.

          Please respond only with markdown that contains yaml. You can
          add comments inline with your step by step thinking. The response must start
          with ```yaml and end with ``` because your answer will be parsed by code. It
          is very important to stick to the format.
          Current time is 17:28:33. Today's date is 2025-07-05.
      - role: user
        content: |
          # Light on door

          ## Problem statement

          Create an blueprint automation to turn on a light when the door opens.

          ## Example use cases

          These are example use cases that could be used with the blueprint:

          - Turn on the pantry light when the pantry door opens

          ## Detailed Description

          The blueprint should accept two inputs:

          | Input          | Description                                                                     |
          | -------------- | ------------------------------------------------------------------------------- |
          | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
          | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

          The automation should trigger when the door opens, and turn the light on. The
          light should be shut off when the door closes or after a 2 minute timeout.
      - role: assistant
        agent_id: conversation.mock_title
        content: |-
          ```yaml
          blueprint:
            name: Light on door
            description: Turn on a light when the door opens and turn it off when the door closes or after a 2 minute timeout.
            inputs:
              door_sensor:
                friendly_name: Door sensor
                type: binary_sensor
              light_switch:
                friendly_name: Light switch
                type: light
                multiple: true
            steps:
              - id: trigger
                title: Trigger automation when the door opens
                initial_state: true
                action:
                  service: trigger_event
                  data:
                    event: door_open
              - id: turn_on_light
                title: Turn on the light
                action:
                  service: light.turn_on
                  data:
                    entity_id: >
                      {{ light_switch | join(', ') }}
              - id: wait_for_door_close
                title: Wait for the door to close
                action:
                  service: trigger_event
                  data:
                    event: door_close
              - id: turn_off_light
                title: Turn off the light
                action:
                  service: light.turn_off
                  data:
                    entity_id: >
                      {{ light_switch | join(', ') }}
              - id: timeout
                title: Turn off the light after 2 minutes if the door hasn't closed
                action:
                  delay: 120
                  service: light.turn_off
                  data:
                    entity_id: >
                      {{ light_switch | join(', ') }}
          ```
        tool_calls: null
      tools: null
    timestamp: 2025-07-06 00:28:33.507312+00:00
  duration_ms: 8613.727
  tries: 1
