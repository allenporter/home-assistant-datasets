---
uuid: 0deaeae2-d331-4d9b-a490-bdbc733ab9f2
task_id: door_left_open_door_left_open-door_left_open-2
model_id: qwen3-8b
category: media_player
task:
  input_text: |
    # Door left open

    ## Problem statement

    Create an blueprint automation to play an alert on the speaker when the door is
    left open.

    ## Example use cases

    These are example use cases that could be used with the blueprint:

    - Play an message on the living room speaker if the garage door has been left open for more than 30 minutes
    - When the front door is ajar for 5 minutes, play a sound on the kitchen bluetooth speaker.

    ## Detailed Description

    The blueprint should accept two inputs:

    | Input           | Selector Type | Description                                                                           |
    | --------------- | ------------- | ------------------------------------------------------------------------------------- |
    | `door_sensor`   | `entity`      | A `binary_sensor` entity selector door sensor that is the target of the automation.   |
    | `alert_media`   | `media`       | The target for the `media` selector for the media player and media id with the alter. |
    | `open_duration` | `duration`    | A `duration` selector, the amount of time before playing the alert.                   |

    The automation should play the selected media when the door has been open for the specified duration.
response: |-
  ```yaml
  blueprint:
    name: door_left_open_alert
    description: Play an alert on a speaker when a door is left open for a specified duration.
    inputs:
      door_sensor:
        description: A binary_sensor entity that represents the door.
        selector:
          entity:
            domain: binary_sensor
            device_class: door
      alert_media:
        description: The media player and media ID to play the alert.
        selector:
          media:
            media_player: true
            media_id: true
      open_duration:
        description: The duration the door must be open before triggering the alert.
        selector:
          duration:
            minutes: true
    sensors:
      door_open_duration:
        description: Tracks how long the door has been open.
        unit_of_measurement: 'minutes'
        icon: 'mdi:timer'
        value_template: >
          {% if is_state('binary_sensor.door', 'on') %}
            {{ (now() - state_attr('binary_sensor.door', 'last_changed')).total_seconds() / 60 | round }}
          {% else %}
            0
          {% endif %}
    conditions:
      condition: template
      value_template: >
        {{ (now() - state_attr('binary_sensor.door', 'last_changed')).total_seconds() / 60 | round >= (open_duration | timestamp_offset('minute') | timestamp_seconds / 60) }}
    actions:
      - service: media_player.play_media
        data:
          entity_id: >-
            {{ alert_media.entity_id }}
          media_id: >-
            {{ alert_media.media_id }}
  ```
context:
  conversation_trace:
  - event_type: async_process
    data:
      text: |
        # Door left open

        ## Problem statement

        Create an blueprint automation to play an alert on the speaker when the door is
        left open.

        ## Example use cases

        These are example use cases that could be used with the blueprint:

        - Play an message on the living room speaker if the garage door has been left open for more than 30 minutes
        - When the front door is ajar for 5 minutes, play a sound on the kitchen bluetooth speaker.

        ## Detailed Description

        The blueprint should accept two inputs:

        | Input           | Selector Type | Description                                                                           |
        | --------------- | ------------- | ------------------------------------------------------------------------------------- |
        | `door_sensor`   | `entity`      | A `binary_sensor` entity selector door sensor that is the target of the automation.   |
        | `alert_media`   | `media`       | The target for the `media` selector for the media player and media id with the alter. |
        | `open_duration` | `duration`    | A `duration` selector, the amount of time before playing the alert.                   |

        The automation should play the selected media when the door has been open for the specified duration.
      context:
        id: 01JZEV52JFTJRJSK1RX603MHQN
        parent_id: null
        user_id: null
      conversation_id: null
      device_id: null
      language: en
      agent_id: conversation.mock_title
      extra_system_prompt: null
    timestamp: 2025-07-06 03:05:55.023722+00:00
  - event_type: agent_detail
    data:
      messages:
      - role: system
        content: |-
          Create a Home Assistant blueprint YAML configuration based on the user request.

          Please respond only with markdown that contains yaml. You can
          add comments inline with your step by step thinking. The response must start
          with ```yaml and end with ``` because your answer will be parsed by code. It
          is very important to stick to the format.
          Current time is 20:05:55. Today's date is 2025-07-05.
      - role: user
        content: |
          # Door left open

          ## Problem statement

          Create an blueprint automation to play an alert on the speaker when the door is
          left open.

          ## Example use cases

          These are example use cases that could be used with the blueprint:

          - Play an message on the living room speaker if the garage door has been left open for more than 30 minutes
          - When the front door is ajar for 5 minutes, play a sound on the kitchen bluetooth speaker.

          ## Detailed Description

          The blueprint should accept two inputs:

          | Input           | Selector Type | Description                                                                           |
          | --------------- | ------------- | ------------------------------------------------------------------------------------- |
          | `door_sensor`   | `entity`      | A `binary_sensor` entity selector door sensor that is the target of the automation.   |
          | `alert_media`   | `media`       | The target for the `media` selector for the media player and media id with the alter. |
          | `open_duration` | `duration`    | A `duration` selector, the amount of time before playing the alert.                   |

          The automation should play the selected media when the door has been open for the specified duration.
      - role: assistant
        agent_id: conversation.mock_title
        content: |-
          ```yaml
          blueprint:
            name: door_left_open_alert
            description: Play an alert on a speaker when a door is left open for a specified duration.
            inputs:
              door_sensor:
                description: A binary_sensor entity that represents the door.
                selector:
                  entity:
                    domain: binary_sensor
                    device_class: door
              alert_media:
                description: The media player and media ID to play the alert.
                selector:
                  media:
                    media_player: true
                    media_id: true
              open_duration:
                description: The duration the door must be open before triggering the alert.
                selector:
                  duration:
                    minutes: true
            sensors:
              door_open_duration:
                description: Tracks how long the door has been open.
                unit_of_measurement: 'minutes'
                icon: 'mdi:timer'
                value_template: >
                  {% if is_state('binary_sensor.door', 'on') %}
                    {{ (now() - state_attr('binary_sensor.door', 'last_changed')).total_seconds() / 60 | round }}
                  {% else %}
                    0
                  {% endif %}
            conditions:
              condition: template
              value_template: >
                {{ (now() - state_attr('binary_sensor.door', 'last_changed')).total_seconds() / 60 | round >= (open_duration | timestamp_offset('minute') | timestamp_seconds / 60) }}
            actions:
              - service: media_player.play_media
                data:
                  entity_id: >-
                    {{ alert_media.entity_id }}
                  media_id: >-
                    {{ alert_media.media_id }}
          ```
        tool_calls: null
      tools: null
    timestamp: 2025-07-06 03:05:55.025089+00:00
  duration_ms: 14134.861
  tries: 1
