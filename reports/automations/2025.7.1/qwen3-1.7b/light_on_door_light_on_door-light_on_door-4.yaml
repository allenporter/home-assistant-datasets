---
uuid: 4d589909-4103-49db-b9d0-931f529f8192
task_id: light_on_door_light_on_door-light_on_door-4
model_id: qwen3-1.7b
category: light
task:
  input_text: |
    # Light on door

    ## Problem statement

    Create an blueprint automation to turn on a light when the door opens.

    ## Example use cases

    These are example use cases that could be used with the blueprint:

    - Turn on the pantry light when the pantry door opens

    ## Detailed Description

    The blueprint should accept two inputs:

    | Input          | Description                                                                     |
    | -------------- | ------------------------------------------------------------------------------- |
    | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
    | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

    The automation should trigger when the door opens, and turn the light on. The
    light should be shut off when the door closes or after a 2 minute timeout.
response: |-
  ```yaml
  # Home Assistant Blueprint: Light on door

  # Blueprint configuration
  name: "Light on door"
  version: 1
  description: "Turns on the light when the door opens and shuts it off after 2 minutes."

  # Inputs
  inputs:
    door_sensor:
      type: binary_sensor
      name: "Door Sensor"
      description: "Trigger the automation when the door opens."
    light_switch:
      type: light
      name: "Pantry Light"
      description: "The light to turn on when the door opens."

  # Automation
  automations:
    - name: "Turn on light when door opens"
      description: "Turn on the light when the door opens."
      trigger:
        - platform: event
          device: door_sensor
          event: opened
      action:
        - service: light.turn_on
          data:
            entity_id: "{{ light_switch.entity_id }}"
      conditions:
        - condition: template
          value: |
            state.matches.light_switch.state == 'on'
      duration: 2 minutes
  ```
context:
  conversation_trace:
  - event_type: async_process
    data:
      text: |
        # Light on door

        ## Problem statement

        Create an blueprint automation to turn on a light when the door opens.

        ## Example use cases

        These are example use cases that could be used with the blueprint:

        - Turn on the pantry light when the pantry door opens

        ## Detailed Description

        The blueprint should accept two inputs:

        | Input          | Description                                                                     |
        | -------------- | ------------------------------------------------------------------------------- |
        | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
        | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

        The automation should trigger when the door opens, and turn the light on. The
        light should be shut off when the door closes or after a 2 minute timeout.
      context:
        id: 01JZEYVG2CRTV3EHAHK65HMWTH
        parent_id: null
        user_id: null
      conversation_id: null
      device_id: null
      language: en
      agent_id: conversation.mock_title
      extra_system_prompt: null
    timestamp: 2025-07-06 04:10:35.468979+00:00
  - event_type: agent_detail
    data:
      messages:
      - role: system
        content: |-
          Create a Home Assistant blueprint YAML configuration based on the user request.

          Please respond only with markdown that contains yaml. You can
          add comments inline with your step by step thinking. The response must start
          with ```yaml and end with ``` because your answer will be parsed by code. It
          is very important to stick to the format.
          Current time is 21:10:35. Today's date is 2025-07-05.
      - role: user
        content: |
          # Light on door

          ## Problem statement

          Create an blueprint automation to turn on a light when the door opens.

          ## Example use cases

          These are example use cases that could be used with the blueprint:

          - Turn on the pantry light when the pantry door opens

          ## Detailed Description

          The blueprint should accept two inputs:

          | Input          | Description                                                                     |
          | -------------- | ------------------------------------------------------------------------------- |
          | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
          | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

          The automation should trigger when the door opens, and turn the light on. The
          light should be shut off when the door closes or after a 2 minute timeout.
      - role: assistant
        agent_id: conversation.mock_title
        content: |-
          ```yaml
          # Home Assistant Blueprint: Light on door

          # Blueprint configuration
          name: "Light on door"
          version: 1
          description: "Turns on the light when the door opens and shuts it off after 2 minutes."

          # Inputs
          inputs:
            door_sensor:
              type: binary_sensor
              name: "Door Sensor"
              description: "Trigger the automation when the door opens."
            light_switch:
              type: light
              name: "Pantry Light"
              description: "The light to turn on when the door opens."

          # Automation
          automations:
            - name: "Turn on light when door opens"
              description: "Turn on the light when the door opens."
              trigger:
                - platform: event
                  device: door_sensor
                  event: opened
              action:
                - service: light.turn_on
                  data:
                    entity_id: "{{ light_switch.entity_id }}"
              conditions:
                - condition: template
                  value: |
                    state.matches.light_switch.state == 'on'
              duration: 2 minutes
          ```
        tool_calls: null
      tools: null
    timestamp: 2025-07-06 04:10:35.470324+00:00
  duration_ms: 3150.091
  tries: 1
