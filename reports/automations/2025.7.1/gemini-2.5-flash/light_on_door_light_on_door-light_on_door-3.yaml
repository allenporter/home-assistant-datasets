---
uuid: 1a3ec8dc-6478-40f5-9d1c-01d4ef71e709
task_id: light_on_door_light_on_door-light_on_door-3
model_id: gemini-2.5-flash
category: light
task:
  input_text: |
    # Light on door

    ## Problem statement

    Create an blueprint automation to turn on a light when the door opens.

    ## Example use cases

    These are example use cases that could be used with the blueprint:

    - Turn on the pantry light when the pantry door opens

    ## Detailed Description

    The blueprint should accept two inputs:

    | Input          | Description                                                                     |
    | -------------- | ------------------------------------------------------------------------------- |
    | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
    | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

    The automation should trigger when the door opens, and turn the light on. The
    light should be shut off when the door closes or after a 2 minute timeout.
response: |-
  ```yaml
  blueprint:
    name: Light on door
    description: Turn on a light when a door opens, and turn it off when the door closes or after a timeout.
    domain: automation
    source_url: https://github.com/home-assistant/core/blob/dev/homeassistant/components/automation/blueprints/light_on_door.yaml # This is a placeholder, replace with actual URL if published

  input:
    door_sensor:
      name: Door sensor
      description: The binary sensor for the door (e.g., contact sensor).
      selector:
        entity:
          domain: binary_sensor
          device_class: # Suggest common device classes for doors
            - door
            - window
            - garage_door
            - opening
            - motion # Sometimes motion sensors are used to detect opening
            - occupancy # Also for presence in a room after door opens
    light_switch:
      name: Light(s) to control
      description: One or more light entities to turn on/off.
      selector:
        target:
          entity:
            domain: light

  mode: restart

  trigger:
    - platform: state
      entity_id: !input door_sensor
      from: "off"
      to: "on"
      id: "door_opened" # Assign an ID for clarity and potential future expansion

  action:
    - choose:
        - conditions:
            - condition: trigger
              id: "door_opened"
          sequence:
            - service: light.turn_on
              target: !input light_switch
            - wait_for_trigger:
                - platform: state
                  entity_id: !input door_sensor
                  to: "off"
              timeout: "00:02:00" # 2-minute timeout
              continue_on_timeout: true # Ensure the automation continues to turn off the light even if timeout occurs
            - service: light.turn_off
              target: !input light_switch
  ```
context:
  conversation_trace:
  - event_type: async_process
    data:
      text: |
        # Light on door

        ## Problem statement

        Create an blueprint automation to turn on a light when the door opens.

        ## Example use cases

        These are example use cases that could be used with the blueprint:

        - Turn on the pantry light when the pantry door opens

        ## Detailed Description

        The blueprint should accept two inputs:

        | Input          | Description                                                                     |
        | -------------- | ------------------------------------------------------------------------------- |
        | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
        | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

        The automation should trigger when the door opens, and turn the light on. The
        light should be shut off when the door closes or after a 2 minute timeout.
      context:
        id: 01JZEJGX2XZQ3TGRVRJ7GV6WHM
        parent_id: null
        user_id: null
      conversation_id: null
      device_id: null
      language: en
      agent_id: conversation.mock_title
      extra_system_prompt: null
    timestamp: 2025-07-06 00:35:05.437105+00:00
  - event_type: agent_detail
    data:
      messages:
      - role: system
        content: |-
          Create a Home Assistant blueprint YAML configuration based on the user request.

          Please respond only with markdown that contains yaml. You can
          add comments inline with your step by step thinking. The response must start
          with ```yaml and end with ``` because your answer will be parsed by code. It
          is very important to stick to the format.
          Current time is 17:35:05. Today's date is 2025-07-05.
      - role: user
        content: |
          # Light on door

          ## Problem statement

          Create an blueprint automation to turn on a light when the door opens.

          ## Example use cases

          These are example use cases that could be used with the blueprint:

          - Turn on the pantry light when the pantry door opens

          ## Detailed Description

          The blueprint should accept two inputs:

          | Input          | Description                                                                     |
          | -------------- | ------------------------------------------------------------------------------- |
          | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
          | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

          The automation should trigger when the door opens, and turn the light on. The
          light should be shut off when the door closes or after a 2 minute timeout.
      - role: assistant
        agent_id: conversation.mock_title
        content: |-
          ```yaml
          blueprint:
            name: Light on door
            description: Turn on a light when a door opens, and turn it off when the door closes or after a timeout.
            domain: automation
            source_url: https://github.com/home-assistant/core/blob/dev/homeassistant/components/automation/blueprints/light_on_door.yaml # This is a placeholder, replace with actual URL if published

          input:
            door_sensor:
              name: Door sensor
              description: The binary sensor for the door (e.g., contact sensor).
              selector:
                entity:
                  domain: binary_sensor
                  device_class: # Suggest common device classes for doors
                    - door
                    - window
                    - garage_door
                    - opening
                    - motion # Sometimes motion sensors are used to detect opening
                    - occupancy # Also for presence in a room after door opens
            light_switch:
              name: Light(s) to control
              description: One or more light entities to turn on/off.
              selector:
                target:
                  entity:
                    domain: light

          mode: restart

          trigger:
            - platform: state
              entity_id: !input door_sensor
              from: "off"
              to: "on"
              id: "door_opened" # Assign an ID for clarity and potential future expansion

          action:
            - choose:
                - conditions:
                    - condition: trigger
                      id: "door_opened"
                  sequence:
                    - service: light.turn_on
                      target: !input light_switch
                    - wait_for_trigger:
                        - platform: state
                          entity_id: !input door_sensor
                          to: "off"
                      timeout: "00:02:00" # 2-minute timeout
                      continue_on_timeout: true # Ensure the automation continues to turn off the light even if timeout occurs
                    - service: light.turn_off
                      target: !input light_switch
          ```
        tool_calls: null
      tools: null
    timestamp: 2025-07-06 00:35:05.438490+00:00
  duration_ms: 4605.903
  tries: 1
