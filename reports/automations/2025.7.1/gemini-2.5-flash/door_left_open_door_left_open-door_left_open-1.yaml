---
uuid: 8142833c-1a12-44d4-83a8-f8adec3daa2b
task_id: door_left_open_door_left_open-door_left_open-1
model_id: gemini-2.5-flash
category: media_player
task:
  input_text: |
    # Door left open

    ## Problem statement

    Create an blueprint automation to play an alert on the speaker when the door is
    left open.

    ## Example use cases

    These are example use cases that could be used with the blueprint:

    - Play an message on the living room speaker if the garage door has been left open for more than 30 minutes
    - When the front door is ajar for 5 minutes, play a sound on the kitchen bluetooth speaker.

    ## Detailed Description

    The blueprint should accept two inputs:

    | Input           | Selector Type | Description                                                                           |
    | --------------- | ------------- | ------------------------------------------------------------------------------------- |
    | `door_sensor`   | `entity`      | A `binary_sensor` entity selector door sensor that is the target of the automation.   |
    | `alert_media`   | `media`       | The target for the `media` selector for the media player and media id with the alter. |
    | `open_duration` | `duration`    | A `duration` selector, the amount of time before playing the alert.                   |

    The automation should play the selected media when the door has been open for the specified duration.
response: |-
  ```yaml
  blueprint:
    name: Door Left Open Alert
    description: Plays an alert on a speaker when a door or window has been left open for a specified duration.
    domain: automation
    input:
      door_sensor:
        name: Door/Window Sensor
        description: A binary_sensor entity representing the door or window to monitor.
        selector:
          entity:
            domain: binary_sensor
            device_class:
              - door
              - garage_door
              - window
              - opening # Generic class for open/closed sensors
      open_duration:
        name: Open Duration
        description: The amount of time the door/window must be open before the alert plays.
        selector:
          duration:
      alert_media:
        name: Alert Media
        description: The target media player and the media to play as the alert.
        selector:
          media:

  mode: single
  # If the automation is triggered again while it's already running (e.g., door opens and closes quickly),
  # we want to prevent multiple alerts from queuing up. 'single' mode with 'silent' for max_exceeded
  # ensures only one instance runs at a time and ignores subsequent triggers.
  max_exceeded: silent

  trigger:
    - platform: state
      entity_id: !input door_sensor
      to: 'on' # Trigger when the door/window state changes to 'on' (open)
      for: !input open_duration # And stays open for the specified duration

  action:
    # The 'media' selector output directly provides the 'data' structure
    # required by the 'media_player.play_media' service, including
    # 'entity_id', 'media_content_id', and 'media_content_type'.
    - service: media_player.play_media
      data: !input alert_media
  ```
context:
  conversation_trace:
  - event_type: async_process
    data:
      text: |
        # Door left open

        ## Problem statement

        Create an blueprint automation to play an alert on the speaker when the door is
        left open.

        ## Example use cases

        These are example use cases that could be used with the blueprint:

        - Play an message on the living room speaker if the garage door has been left open for more than 30 minutes
        - When the front door is ajar for 5 minutes, play a sound on the kitchen bluetooth speaker.

        ## Detailed Description

        The blueprint should accept two inputs:

        | Input           | Selector Type | Description                                                                           |
        | --------------- | ------------- | ------------------------------------------------------------------------------------- |
        | `door_sensor`   | `entity`      | A `binary_sensor` entity selector door sensor that is the target of the automation.   |
        | `alert_media`   | `media`       | The target for the `media` selector for the media player and media id with the alter. |
        | `open_duration` | `duration`    | A `duration` selector, the amount of time before playing the alert.                   |

        The automation should play the selected media when the door has been open for the specified duration.
      context:
        id: 01JZEJD9GPGGRYET00VVJHY2ZP
        parent_id: null
        user_id: null
      conversation_id: null
      device_id: null
      language: en
      agent_id: conversation.mock_title
      extra_system_prompt: null
    timestamp: 2025-07-06 00:33:07.094316+00:00
  - event_type: agent_detail
    data:
      messages:
      - role: system
        content: |-
          Create a Home Assistant blueprint YAML configuration based on the user request.

          Please respond only with markdown that contains yaml. You can
          add comments inline with your step by step thinking. The response must start
          with ```yaml and end with ``` because your answer will be parsed by code. It
          is very important to stick to the format.
          Current time is 17:33:07. Today's date is 2025-07-05.
      - role: user
        content: |
          # Door left open

          ## Problem statement

          Create an blueprint automation to play an alert on the speaker when the door is
          left open.

          ## Example use cases

          These are example use cases that could be used with the blueprint:

          - Play an message on the living room speaker if the garage door has been left open for more than 30 minutes
          - When the front door is ajar for 5 minutes, play a sound on the kitchen bluetooth speaker.

          ## Detailed Description

          The blueprint should accept two inputs:

          | Input           | Selector Type | Description                                                                           |
          | --------------- | ------------- | ------------------------------------------------------------------------------------- |
          | `door_sensor`   | `entity`      | A `binary_sensor` entity selector door sensor that is the target of the automation.   |
          | `alert_media`   | `media`       | The target for the `media` selector for the media player and media id with the alter. |
          | `open_duration` | `duration`    | A `duration` selector, the amount of time before playing the alert.                   |

          The automation should play the selected media when the door has been open for the specified duration.
      - role: assistant
        agent_id: conversation.mock_title
        content: |-
          ```yaml
          blueprint:
            name: Door Left Open Alert
            description: Plays an alert on a speaker when a door or window has been left open for a specified duration.
            domain: automation
            input:
              door_sensor:
                name: Door/Window Sensor
                description: A binary_sensor entity representing the door or window to monitor.
                selector:
                  entity:
                    domain: binary_sensor
                    device_class:
                      - door
                      - garage_door
                      - window
                      - opening # Generic class for open/closed sensors
              open_duration:
                name: Open Duration
                description: The amount of time the door/window must be open before the alert plays.
                selector:
                  duration:
              alert_media:
                name: Alert Media
                description: The target media player and the media to play as the alert.
                selector:
                  media:

          mode: single
          # If the automation is triggered again while it's already running (e.g., door opens and closes quickly),
          # we want to prevent multiple alerts from queuing up. 'single' mode with 'silent' for max_exceeded
          # ensures only one instance runs at a time and ignores subsequent triggers.
          max_exceeded: silent

          trigger:
            - platform: state
              entity_id: !input door_sensor
              to: 'on' # Trigger when the door/window state changes to 'on' (open)
              for: !input open_duration # And stays open for the specified duration

          action:
            # The 'media' selector output directly provides the 'data' structure
            # required by the 'media_player.play_media' service, including
            # 'entity_id', 'media_content_id', and 'media_content_type'.
            - service: media_player.play_media
              data: !input alert_media
          ```
        tool_calls: null
      tools: null
    timestamp: 2025-07-06 00:33:07.095652+00:00
  duration_ms: 7328.111
  tries: 1
