---
uuid: 31e18720-3c8f-4343-b4e9-1a17054394ba
task_id: vacuum_pause_vacuum_pause-vacuum_pause-2
model_id: gemini-2.5-flash
category: vacuum
task:
  input_text: |
    # Vacuum Pause

    ## Problem statement

    Create a blueprint automation to pause the vacuum when I receive a phone call.

    ## Example use cases

    These are example use cases that could be used with the blueprint:

    - Pause the vacuum when I get a phone call from my relatives
    - Don't interrupt my work video convererence call with vacuum noise by pausing it when the call starts

    ## Detailed Description

    The blueprint should accept two inputs:

    | Input               | Description                                                           |
    | ------------------- | --------------------------------------------------------------------- |
    | `phone_call_sensor` | A `binary_sensor` entity that triggers when a phone call is received. |
    | `vacuum_entity`     | A `vacuum` entity to pause when the automation fires.                 |

    The automation should trigger when the binary sensor fires and the vacuum is running. The vacuum
    should be paused (not stopped) and can be resumed manually.
response: |-
  ```yaml
  blueprint:
    name: Vacuum Pause on Phone Call
    description: Pauses a vacuum cleaner when a specified phone call sensor triggers.
    domain: automation
    input:
      phone_call_sensor:
        name: Phone Call Sensor
        description: A binary sensor that turns 'on' when a phone call is received.
        selector:
          entity:
            domain: binary_sensor
            multiple: false
        required: true
      vacuum_entity:
        name: Vacuum Entity
        description: The vacuum cleaner entity to pause.
        selector:
          entity:
            domain: vacuum
            multiple: false
        required: true

  mode: single
  max_exceeded: silent

  trigger:
    - platform: state
      entity_id: !input phone_call_sensor
      to: 'on'
      id: phone_call_started

  condition:
    - condition: template
      value_template: "{{ is_state_attr(input_vacuum_entity, 'state', 'cleaning') or is_state_attr(input_vacuum_entity, 'state', 'running') }}"
      # Note: Some vacuum integrations report 'cleaning' while others report 'running'.
      # It's safer to check for both. If your vacuum uses a different state, adjust here.

  action:
    - service: vacuum.pause
      target:
        entity_id: !input vacuum_entity
    - service: system_log.write
      data:
        message: "Vacuum {{ states(input_vacuum_entity) }} paused due to phone call from {{ states(input_phone_call_sensor) }}"
        level: info
        logger: vacuum_pause_blueprint
  ```
context:
  conversation_trace:
  - event_type: async_process
    data:
      text: |
        # Vacuum Pause

        ## Problem statement

        Create a blueprint automation to pause the vacuum when I receive a phone call.

        ## Example use cases

        These are example use cases that could be used with the blueprint:

        - Pause the vacuum when I get a phone call from my relatives
        - Don't interrupt my work video convererence call with vacuum noise by pausing it when the call starts

        ## Detailed Description

        The blueprint should accept two inputs:

        | Input               | Description                                                           |
        | ------------------- | --------------------------------------------------------------------- |
        | `phone_call_sensor` | A `binary_sensor` entity that triggers when a phone call is received. |
        | `vacuum_entity`     | A `vacuum` entity to pause when the automation fires.                 |

        The automation should trigger when the binary sensor fires and the vacuum is running. The vacuum
        should be paused (not stopped) and can be resumed manually.
      context:
        id: 01JZEJHJ0P705XXSJDM530GN0V
        parent_id: null
        user_id: null
      conversation_id: null
      device_id: null
      language: en
      agent_id: conversation.mock_title
      extra_system_prompt: null
    timestamp: 2025-07-06 00:35:26.870878+00:00
  - event_type: agent_detail
    data:
      messages:
      - role: system
        content: |-
          Create a Home Assistant blueprint YAML configuration based on the user request.

          Please respond only with markdown that contains yaml. You can
          add comments inline with your step by step thinking. The response must start
          with ```yaml and end with ``` because your answer will be parsed by code. It
          is very important to stick to the format.
          Current time is 17:35:26. Today's date is 2025-07-05.
      - role: user
        content: |
          # Vacuum Pause

          ## Problem statement

          Create a blueprint automation to pause the vacuum when I receive a phone call.

          ## Example use cases

          These are example use cases that could be used with the blueprint:

          - Pause the vacuum when I get a phone call from my relatives
          - Don't interrupt my work video convererence call with vacuum noise by pausing it when the call starts

          ## Detailed Description

          The blueprint should accept two inputs:

          | Input               | Description                                                           |
          | ------------------- | --------------------------------------------------------------------- |
          | `phone_call_sensor` | A `binary_sensor` entity that triggers when a phone call is received. |
          | `vacuum_entity`     | A `vacuum` entity to pause when the automation fires.                 |

          The automation should trigger when the binary sensor fires and the vacuum is running. The vacuum
          should be paused (not stopped) and can be resumed manually.
      - role: assistant
        agent_id: conversation.mock_title
        content: |-
          ```yaml
          blueprint:
            name: Vacuum Pause on Phone Call
            description: Pauses a vacuum cleaner when a specified phone call sensor triggers.
            domain: automation
            input:
              phone_call_sensor:
                name: Phone Call Sensor
                description: A binary sensor that turns 'on' when a phone call is received.
                selector:
                  entity:
                    domain: binary_sensor
                    multiple: false
                required: true
              vacuum_entity:
                name: Vacuum Entity
                description: The vacuum cleaner entity to pause.
                selector:
                  entity:
                    domain: vacuum
                    multiple: false
                required: true

          mode: single
          max_exceeded: silent

          trigger:
            - platform: state
              entity_id: !input phone_call_sensor
              to: 'on'
              id: phone_call_started

          condition:
            - condition: template
              value_template: "{{ is_state_attr(input_vacuum_entity, 'state', 'cleaning') or is_state_attr(input_vacuum_entity, 'state', 'running') }}"
              # Note: Some vacuum integrations report 'cleaning' while others report 'running'.
              # It's safer to check for both. If your vacuum uses a different state, adjust here.

          action:
            - service: vacuum.pause
              target:
                entity_id: !input vacuum_entity
            - service: system_log.write
              data:
                message: "Vacuum {{ states(input_vacuum_entity) }} paused due to phone call from {{ states(input_phone_call_sensor) }}"
                level: info
                logger: vacuum_pause_blueprint
          ```
        tool_calls: null
      tools: null
    timestamp: 2025-07-06 00:35:26.872312+00:00
  duration_ms: 2925.031
  tries: 1
