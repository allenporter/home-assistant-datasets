---
uuid: 057c4c92-aca4-4ed6-b586-306bc97666b6
task_id: vacuum_pause_vacuum_pause-vacuum_pause-3
model_id: gemini-2.5-flash
category: vacuum
task:
  input_text: |
    # Vacuum Pause

    ## Problem statement

    Create a blueprint automation to pause the vacuum when I receive a phone call.

    ## Example use cases

    These are example use cases that could be used with the blueprint:

    - Pause the vacuum when I get a phone call from my relatives
    - Don't interrupt my work video convererence call with vacuum noise by pausing it when the call starts

    ## Detailed Description

    The blueprint should accept two inputs:

    | Input               | Description                                                           |
    | ------------------- | --------------------------------------------------------------------- |
    | `phone_call_sensor` | A `binary_sensor` entity that triggers when a phone call is received. |
    | `vacuum_entity`     | A `vacuum` entity to pause when the automation fires.                 |

    The automation should trigger when the binary sensor fires and the vacuum is running. The vacuum
    should be paused (not stopped) and can be resumed manually.
response: |-
  ```yaml
  blueprint:
    name: Vacuum Pause
    description: Pause the vacuum when a phone call is received to avoid noise interruption.
    domain: automation
    source_url: https://gist.github.com/example/vacuum_pause.yaml # Placeholder, replace with actual URL if hosted

    input:
      phone_call_sensor:
        name: Phone Call Sensor
        description: A binary_sensor entity that turns 'on' when a phone call is received.
        selector:
          entity:
            domain: binary_sensor

      vacuum_entity:
        name: Vacuum Entity
        description: The vacuum entity to pause when a phone call is detected.
        selector:
          entity:
            domain: vacuum

  mode: single
  max_exceeded: silent

  trigger:
    - platform: state
      entity_id: !input phone_call_sensor
      to: "on"
      id: phone_call_started

  condition:
    - condition: state
      entity_id: !input vacuum_entity
      # Common 'running' states for a vacuum are 'cleaning'.
      # Some vacuums might also use 'moving' or other states.
      state: "cleaning"

  action:
    - service: vacuum.pause
      target:
        entity_id: !input vacuum_entity
    - if:
        - condition: trigger
          id: phone_call_started
      then:
        - alias: "Log Automation Trigger"
          service: system_log.write
          data:
            message: "Vacuum pause automation triggered by {{ states(trigger.entity_id) }} turning {{ trigger.to_state.state }}. Pausing {{ states(vacuum_entity) }}."
            level: debug

  ```
context:
  conversation_trace:
  - event_type: async_process
    data:
      text: |
        # Vacuum Pause

        ## Problem statement

        Create a blueprint automation to pause the vacuum when I receive a phone call.

        ## Example use cases

        These are example use cases that could be used with the blueprint:

        - Pause the vacuum when I get a phone call from my relatives
        - Don't interrupt my work video convererence call with vacuum noise by pausing it when the call starts

        ## Detailed Description

        The blueprint should accept two inputs:

        | Input               | Description                                                           |
        | ------------------- | --------------------------------------------------------------------- |
        | `phone_call_sensor` | A `binary_sensor` entity that triggers when a phone call is received. |
        | `vacuum_entity`     | A `vacuum` entity to pause when the automation fires.                 |

        The automation should trigger when the binary sensor fires and the vacuum is running. The vacuum
        should be paused (not stopped) and can be resumed manually.
      context:
        id: 01JZEJHNFJ63600DGARXCDKGR9
        parent_id: null
        user_id: null
      conversation_id: null
      device_id: null
      language: en
      agent_id: conversation.mock_title
      extra_system_prompt: null
    timestamp: 2025-07-06 00:35:30.419077+00:00
  - event_type: agent_detail
    data:
      messages:
      - role: system
        content: |-
          Create a Home Assistant blueprint YAML configuration based on the user request.

          Please respond only with markdown that contains yaml. You can
          add comments inline with your step by step thinking. The response must start
          with ```yaml and end with ``` because your answer will be parsed by code. It
          is very important to stick to the format.
          Current time is 17:35:30. Today's date is 2025-07-05.
      - role: user
        content: |
          # Vacuum Pause

          ## Problem statement

          Create a blueprint automation to pause the vacuum when I receive a phone call.

          ## Example use cases

          These are example use cases that could be used with the blueprint:

          - Pause the vacuum when I get a phone call from my relatives
          - Don't interrupt my work video convererence call with vacuum noise by pausing it when the call starts

          ## Detailed Description

          The blueprint should accept two inputs:

          | Input               | Description                                                           |
          | ------------------- | --------------------------------------------------------------------- |
          | `phone_call_sensor` | A `binary_sensor` entity that triggers when a phone call is received. |
          | `vacuum_entity`     | A `vacuum` entity to pause when the automation fires.                 |

          The automation should trigger when the binary sensor fires and the vacuum is running. The vacuum
          should be paused (not stopped) and can be resumed manually.
      - role: assistant
        agent_id: conversation.mock_title
        content: |-
          ```yaml
          blueprint:
            name: Vacuum Pause
            description: Pause the vacuum when a phone call is received to avoid noise interruption.
            domain: automation
            source_url: https://gist.github.com/example/vacuum_pause.yaml # Placeholder, replace with actual URL if hosted

            input:
              phone_call_sensor:
                name: Phone Call Sensor
                description: A binary_sensor entity that turns 'on' when a phone call is received.
                selector:
                  entity:
                    domain: binary_sensor

              vacuum_entity:
                name: Vacuum Entity
                description: The vacuum entity to pause when a phone call is detected.
                selector:
                  entity:
                    domain: vacuum

          mode: single
          max_exceeded: silent

          trigger:
            - platform: state
              entity_id: !input phone_call_sensor
              to: "on"
              id: phone_call_started

          condition:
            - condition: state
              entity_id: !input vacuum_entity
              # Common 'running' states for a vacuum are 'cleaning'.
              # Some vacuums might also use 'moving' or other states.
              state: "cleaning"

          action:
            - service: vacuum.pause
              target:
                entity_id: !input vacuum_entity
            - if:
                - condition: trigger
                  id: phone_call_started
              then:
                - alias: "Log Automation Trigger"
                  service: system_log.write
                  data:
                    message: "Vacuum pause automation triggered by {{ states(trigger.entity_id) }} turning {{ trigger.to_state.state }}. Pausing {{ states(vacuum_entity) }}."
                    level: debug

          ```
        tool_calls: null
      tools: null
    timestamp: 2025-07-06 00:35:30.420429+00:00
  duration_ms: 3606.593
  tries: 1
